name: CI

on:
  push:
  pull_request:

jobs:
  ios:
    strategy:
      matrix:
        device:
          - "iPhone 14 Pro Max Simulator (16.2)"
      fail-fast: true
    runs-on: macos-latest
    steps:
      - name: "List all simulators"
        run: "xcrun xctrace list devices"

      - name: "Start Simulator"
        # the command "xcrun simctl boot" expects a device identifier
        # the assignment of the UDID variable consists of retrieving the ID of the simulator
        # by extracting it from the command "xcrun xctrace list devices"
        run: |
          UDID=$(xcrun xctrace list devices | grep "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"

      - name: Check out
        uses: actions/checkout@v3

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta

      - name: Install Flutter dependencies
        run: flutter pub get ./example

      - name: Run integration tests
        run: |
          cd example
          flutter test integration_test/integration_test.dart
  android:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [31]
        target: [google_apis]
      fail-fast: true
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'gradle'

      - name: Install Flutter dependencies
        run: |
          flutter pub get ./example
          
      - name: Analyze code
        run: flutter analyze

      # More info on https://github.com/ReactiveCircus/android-emulator-runner    
      - name: Run integration tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          emulator-options: "-no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim"
          working-directory: ./example
          script: |
            echo ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL=600 >> $GITHUB_ENV
            flutter test integration_test/integration_test.dart
